(use '(units unit quantity siunits))
meter
(q* 6 meter ampere)
tesla
(udiv newton (udiv meter sec) coulomb)
(use '(units unit quantity siunits))
(udiv newton (udiv meter sec) coulomb)
(q* 3 4)
(q* 3 4 meter)
(q* 3 4 meter (q* 5 ampere))
(q* 3 4 meter (q/ 5 ampere))
(q* 3 4 meter (qd 5 ampere))
(q* 3 4 meter (qd 5 ampere ampere))
(q* 3 4 meter (qd 5 ampere ampere 5))
(use 'units.siunits)
meter
(* 2 meter)
(q* 2 meter)
(use 'units.quantity)
(q* 2 meter)
(q* 2 meter ampere)
(use 'units.constants)
speed-of-light
(use 'units.quantity 'units.siunits)
(qpow meter -1)
(qpow meter -4)
(use 'units.quantity 'units.siunits)
(qpow meter -1)
(qpow meter -4)
(qpow meter 4)
(qpow meter 0)
(qpow meter 6)
(qpow meter 2)
(qpow (q* 2 meter) 2)
(use 'units.quantity 'units.siunits)
(qpow meter 6)
(qpow meter -6)
(qpow (q* 2 meter) -6)
(qpow (q* 2 meter) 6)
(use 'units.quantity 'units.siunits 'units.constants)
speed-of-light
4e6
4e6N
(floor 4e6)
(round 4e6)
(int 4e6)
(bigint 4e6)
(doc use)
(use 'units.quantity 'units.siunits 'units.constants)
amu
pi
(Math/PI)
Math/PI
(qd 1 2 3)
(use 'units.quantity 'units.siunits 'units.constants)
(bar-planks-const)
bar-planks-const
speed-of-light
amu
(q- proton-mass amu)
(q/ proton-mass amu)
(qd proton-mass amu)
(qd neutron-mass amu)
(use 'units.quantity 'units.siunits 'units.constants)
(grav-const)
grav-const
coulomb-const
(use 'unit.siunits)
(use 'units.siunits)
(milli meter)
(micro meter)
(kilo gram)
kilogram
(use '[units siunits quantity])
(same-units 0 (qd meter meter))
(use '[units siunits quantity])
(same-units 0 (qd meter meter))
(use '[units siunits quantity])
(q- meter ampere)
(use '[unit quantity siunits])
(use '[units quantity siunits])
meter
henry
(case henry "H")
(case henry henry "H")
(use '[units quantity siunits])
henry
meter
(case henry henry "H")
(case henry henry "H" nil)
(doc condp)
(use '[units quantity siunits])
meter
henry
ohm
(q* 5 ohm)
(use '[units siunits quantity])
(qsqrt meter)
(qsqrt (q* 1 meter))
(qsqrt 6)
(map (partial + 1) meter)
(map (comp (partial + 1) second) meter)
(apply ->SIUnit (map (comp (partial + 1) second) meter))
(map 9 0)
(use '[units siunits quantity])
(qsqrt 6)
(qsqrt (q* 1 meter))
(use '[units siunits quantity])
(qsqrt (q* 1 meter))
(qsqrt (q* 1 meter meter))
(use '[units siunits quantity])
(qsqrt (q* 1 meter meter))
(qsqrt (q* 1 meter))
(qsqrt 5)
(qsqrt (q* 9 meter meter))
(qsqrt volt)
(qsqrt gray)
(qsqrt (q* 2 meter meter))
(qsqrt (q* 2 gray))
(use '[units siunits quantity])
(qsqrt (q* 2 meter meter))
(qsqrt gray)
(qd 1)
(qd 2)
(qd 3 4)
(qd 1 meter ampere)
(qd 1 meter ampere 2)
(use '[units siunits quantity])
(map-measure #(Math/sqrt %) (q* 2 meter))
(map-unit #(Math/sqrt %) (q* 2 meter))
(map-unit #(udiv % meter) (q* 2 meter))
(use '[units siunits quantity unit])
(map-unit #(udiv % meter) (q* 2 meter))
(use '[units siunits quantity unit])
(map-unit #(constantly 2) (q* 2 meter))
(map-unit #((constantly 2) %) (q* 2 meter))
